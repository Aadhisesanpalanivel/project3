{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ABINASH\\\\OneDrive\\\\Desktop\\\\Event_manage_wind\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst API_URL = 'http://localhost:5000/api';\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check if user is logged in on mount\n    const token = localStorage.getItem('token');\n    if (token) {\n      fetchCurrentUser(token);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const fetchCurrentUser = async token => {\n    try {\n      const response = await axios.get(`${API_URL}/auth/me`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setCurrentUser(response.data.user);\n    } catch (error) {\n      localStorage.removeItem('token');\n      setCurrentUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post(`${API_URL}/auth/login`, {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      setCurrentUser(user);\n      return user;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to login');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async (name, email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post(`${API_URL}/auth/register`, {\n        name,\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      setCurrentUser(user);\n      return user;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to register');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setCurrentUser(null);\n  };\n\n  // Add auth token to all axios requests\n  axios.interceptors.request.use(config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      loading,\n      error,\n      login,\n      register,\n      logout,\n      isAuthenticated: !!currentUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"JNizP9FwoqjqDhcaQoKbEEqEJbk=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","API_URL","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","error","setError","token","localStorage","getItem","fetchCurrentUser","response","get","headers","Authorization","data","user","removeItem","login","email","password","post","setItem","_error$response","_error$response$data","message","register","name","_error$response2","_error$response2$data","logout","interceptors","request","use","config","Promise","reject","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/ABINASH/OneDrive/Desktop/Event_manage_wind/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nconst API_URL = 'http://localhost:5000/api';\n\nexport const AuthProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        // Check if user is logged in on mount\n        const token = localStorage.getItem('token');\n        if (token) {\n            fetchCurrentUser(token);\n        } else {\n            setLoading(false);\n        }\n    }, []);\n\n    const fetchCurrentUser = async (token) => {\n        try {\n            const response = await axios.get(`${API_URL}/auth/me`, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n            setCurrentUser(response.data.user);\n        } catch (error) {\n            localStorage.removeItem('token');\n            setCurrentUser(null);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const login = async (email, password) => {\n        setLoading(true);\n        setError(null);\n        try {\n            const response = await axios.post(`${API_URL}/auth/login`, {\n                email,\n                password\n            });\n            \n            const { token, user } = response.data;\n            localStorage.setItem('token', token);\n            setCurrentUser(user);\n            return user;\n        } catch (error) {\n            setError(error.response?.data?.message || 'Failed to login');\n            throw error;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const register = async (name, email, password) => {\n        setLoading(true);\n        setError(null);\n        try {\n            const response = await axios.post(`${API_URL}/auth/register`, {\n                name,\n                email,\n                password\n            });\n            \n            const { token, user } = response.data;\n            localStorage.setItem('token', token);\n            setCurrentUser(user);\n            return user;\n        } catch (error) {\n            setError(error.response?.data?.message || 'Failed to register');\n            throw error;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        setCurrentUser(null);\n    };\n\n    // Add auth token to all axios requests\n    axios.interceptors.request.use(\n        (config) => {\n            const token = localStorage.getItem('token');\n            if (token) {\n                config.headers.Authorization = `Bearer ${token}`;\n            }\n            return config;\n        },\n        (error) => {\n            return Promise.reject(error);\n        }\n    );\n\n    return (\n        <AuthContext.Provider value={{\n            currentUser,\n            loading,\n            error,\n            login,\n            register,\n            logout,\n            isAuthenticated: !!currentUser\n        }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}