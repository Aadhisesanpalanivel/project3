{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ABINASH\\\\OneDrive\\\\Desktop\\\\Event_manage_wind\\\\src\\\\context\\\\EventContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventContext = /*#__PURE__*/createContext();\nexport const EventProvider = ({\n  children\n}) => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const addEvent = newEvent => {\n    setEvents(prevEvents => [...prevEvents, {\n      ...newEvent,\n      id: Date.now()\n    }]);\n  };\n  const registerForEvent = eventId => {\n    setEvents(prevEvents => prevEvents.map(event => event.id === eventId ? {\n      ...event,\n      registeredParticipants: (event.registeredParticipants || 0) + 1\n    } : event));\n  };\n  return /*#__PURE__*/_jsxDEV(EventContext.Provider, {\n    value: {\n      events,\n      addEvent,\n      registerForEvent\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(EventProvider, \"fh+hzEDekCPeegwQh0J56A4r3Ew=\");\n_c = EventProvider;\nexport const useEvents = () => {\n  _s2();\n  const context = useContext(EventContext);\n  if (!context) {\n    throw new Error('useEvents must be used within an EventProvider');\n  }\n  return context;\n};\n_s2(useEvents, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"EventProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","EventContext","EventProvider","children","_s","events","setEvents","addEvent","newEvent","prevEvents","id","Date","now","registerForEvent","eventId","map","event","registeredParticipants","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useEvents","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/ABINASH/OneDrive/Desktop/Event_manage_wind/src/context/EventContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\nconst EventContext = createContext();\n\nexport const EventProvider = ({ children }) => {\n    const [events, setEvents] = useState([]);\n\n    const addEvent = (newEvent) => {\n        setEvents(prevEvents => [...prevEvents, { ...newEvent, id: Date.now() }]);\n    };\n\n    const registerForEvent = (eventId) => {\n        setEvents(prevEvents =>\n            prevEvents.map(event =>\n                event.id === eventId\n                    ? { ...event, registeredParticipants: (event.registeredParticipants || 0) + 1 }\n                    : event\n            )\n        );\n    };\n\n    return (\n        <EventContext.Provider value={{ events, addEvent, registerForEvent }}>\n            {children}\n        </EventContext.Provider>\n    );\n};\n\nexport const useEvents = () => {\n    const context = useContext(EventContext);\n    if (!context) {\n        throw new Error('useEvents must be used within an EventProvider');\n    }\n    return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,QAAQ,GAAIC,QAAQ,IAAK;IAC3BF,SAAS,CAACG,UAAU,IAAI,CAAC,GAAGA,UAAU,EAAE;MAAE,GAAGD,QAAQ;MAAEE,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;IAAE,CAAC,CAAC,CAAC;EAC7E,CAAC;EAED,MAAMC,gBAAgB,GAAIC,OAAO,IAAK;IAClCR,SAAS,CAACG,UAAU,IAChBA,UAAU,CAACM,GAAG,CAACC,KAAK,IAChBA,KAAK,CAACN,EAAE,KAAKI,OAAO,GACd;MAAE,GAAGE,KAAK;MAAEC,sBAAsB,EAAE,CAACD,KAAK,CAACC,sBAAsB,IAAI,CAAC,IAAI;IAAE,CAAC,GAC7ED,KACV,CACJ,CAAC;EACL,CAAC;EAED,oBACIhB,OAAA,CAACC,YAAY,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEd,MAAM;MAAEE,QAAQ;MAAEM;IAAiB,CAAE;IAAAV,QAAA,EAChEA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC,CAAC;AAACnB,EAAA,CAtBWF,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AAwB1B,OAAO,MAAMuB,SAAS,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG7B,UAAU,CAACG,YAAY,CAAC;EACxC,IAAI,CAAC0B,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;EACrE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,SAAS;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}