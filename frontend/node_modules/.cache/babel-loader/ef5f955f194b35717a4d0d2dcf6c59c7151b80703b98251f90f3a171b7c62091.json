{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ABINASH\\\\OneDrive\\\\Desktop\\\\Event_manage_wind\\\\src\\\\context\\\\EventContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventContext = /*#__PURE__*/createContext();\nexport const useEvents = () => {\n  _s();\n  return useContext(EventContext);\n};\n_s(useEvents, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const EventProvider = ({\n  children\n}) => {\n  _s2();\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const API_URL = 'http://localhost:5000/api/events';\n\n  // Fetch all events\n  const fetchEvents = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(API_URL);\n      setEvents(response.data);\n      setError(null);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error fetching events');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create new event\n  const createEvent = async eventData => {\n    try {\n      setLoading(true);\n      const response = await axios.post(API_URL, eventData);\n      setEvents([...events, response.data]);\n      setError(null);\n      return response.data;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Error creating event');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Get single event\n  const getEvent = async id => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${API_URL}/${id}`);\n      setError(null);\n      return response.data;\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Error fetching event');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update event\n  const updateEvent = async (id, eventData) => {\n    try {\n      setLoading(true);\n      const response = await axios.put(`${API_URL}/${id}`, eventData);\n      setEvents(events.map(event => event._id === id ? response.data : event));\n      setError(null);\n      return response.data;\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Error updating event');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete event\n  const deleteEvent = async id => {\n    try {\n      setLoading(true);\n      await axios.delete(`${API_URL}/${id}`);\n      setEvents(events.filter(event => event._id !== id));\n      setError(null);\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || 'Error deleting event');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Register for event\n  const registerForEvent = async id => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`${API_URL}/${id}/register`);\n      setEvents(events.map(event => event._id === id ? response.data : event));\n      setError(null);\n      return response.data;\n    } catch (err) {\n      var _err$response6, _err$response6$data;\n      setError(((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.message) || 'Error registering for event');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Unregister from event\n  const unregisterFromEvent = async id => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`${API_URL}/${id}/unregister`);\n      setEvents(events.map(event => event._id === id ? response.data : event));\n      setError(null);\n      return response.data;\n    } catch (err) {\n      var _err$response7, _err$response7$data;\n      setError(((_err$response7 = err.response) === null || _err$response7 === void 0 ? void 0 : (_err$response7$data = _err$response7.data) === null || _err$response7$data === void 0 ? void 0 : _err$response7$data.message) || 'Error unregistering from event');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load events when component mounts\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(EventContext.Provider, {\n    value: {\n      events,\n      loading,\n      error,\n      createEvent,\n      getEvent,\n      updateEvent,\n      deleteEvent,\n      registerForEvent,\n      unregisterFromEvent,\n      fetchEvents\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s2(EventProvider, \"IypEFUpYSOCpKPwAV3AhILeIRe0=\");\n_c = EventProvider;\nvar _c;\n$RefreshReg$(_c, \"EventProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","EventContext","useEvents","_s","EventProvider","children","_s2","events","setEvents","loading","setLoading","error","setError","API_URL","fetchEvents","response","get","data","err","_err$response","_err$response$data","message","createEvent","eventData","post","_err$response2","_err$response2$data","getEvent","id","_err$response3","_err$response3$data","updateEvent","put","map","event","_id","_err$response4","_err$response4$data","deleteEvent","delete","filter","_err$response5","_err$response5$data","registerForEvent","_err$response6","_err$response6$data","unregisterFromEvent","_err$response7","_err$response7$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ABINASH/OneDrive/Desktop/Event_manage_wind/src/context/EventContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst EventContext = createContext();\n\nexport const useEvents = () => useContext(EventContext);\n\nexport const EventProvider = ({ children }) => {\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const API_URL = 'http://localhost:5000/api/events';\n\n  // Fetch all events\n  const fetchEvents = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(API_URL);\n      setEvents(response.data);\n      setError(null);\n    } catch (err) {\n      setError(err.response?.data?.message || 'Error fetching events');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create new event\n  const createEvent = async (eventData) => {\n    try {\n      setLoading(true);\n      const response = await axios.post(API_URL, eventData);\n      setEvents([...events, response.data]);\n      setError(null);\n      return response.data;\n    } catch (err) {\n      setError(err.response?.data?.message || 'Error creating event');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Get single event\n  const getEvent = async (id) => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${API_URL}/${id}`);\n      setError(null);\n      return response.data;\n    } catch (err) {\n      setError(err.response?.data?.message || 'Error fetching event');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update event\n  const updateEvent = async (id, eventData) => {\n    try {\n      setLoading(true);\n      const response = await axios.put(`${API_URL}/${id}`, eventData);\n      setEvents(events.map(event => event._id === id ? response.data : event));\n      setError(null);\n      return response.data;\n    } catch (err) {\n      setError(err.response?.data?.message || 'Error updating event');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete event\n  const deleteEvent = async (id) => {\n    try {\n      setLoading(true);\n      await axios.delete(`${API_URL}/${id}`);\n      setEvents(events.filter(event => event._id !== id));\n      setError(null);\n    } catch (err) {\n      setError(err.response?.data?.message || 'Error deleting event');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Register for event\n  const registerForEvent = async (id) => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`${API_URL}/${id}/register`);\n      setEvents(events.map(event => event._id === id ? response.data : event));\n      setError(null);\n      return response.data;\n    } catch (err) {\n      setError(err.response?.data?.message || 'Error registering for event');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Unregister from event\n  const unregisterFromEvent = async (id) => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`${API_URL}/${id}/unregister`);\n      setEvents(events.map(event => event._id === id ? response.data : event));\n      setError(null);\n      return response.data;\n    } catch (err) {\n      setError(err.response?.data?.message || 'Error unregistering from event');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load events when component mounts\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n\n  return (\n    <EventContext.Provider value={{\n      events,\n      loading,\n      error,\n      createEvent,\n      getEvent,\n      updateEvent,\n      deleteEvent,\n      registerForEvent,\n      unregisterFromEvent,\n      fetchEvents\n    }}>\n      {children}\n    </EventContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}